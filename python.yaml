---

# Python build steps

version: 2alpha

vars:
  python_venv_dir: "env"
  python_dist_dir: "dist"

  twine_username: "__token__"
  twine_password: "{{ env.SECRET_PYPI_TOKEN }}"

steps:
  clean_dist:
    during:
      - +clean
    command:
      cmd: >-
        rm -rf "./{{ python_dist_dir }}/"

  clean_venv:
    during:
      - +clean
    command:
      cmd: >-
        rm -rf "./{{ python_venv_dir }}/"

  python_lint:
    during:
      - +lint
    block:
      steps:
        - name: Ensure pylint and black installed
          bash:
            cmd: pip install --upgrade black pylint

        - name: pylint src directory
          bash:
            cmd: pylint src

        - name: black src directory
          bash:
            cmd: black --diff src

  python_build:
    during:
      - +build
    after:
      - +clean
      - clean_venv
    depends_on:
      - clean_dist
    block:
      steps:
        - name: Set up python environment
          bash:
            cmd: >-
              python3 -m venv "{{ python_venv_dir }}" &&
              source "./{{ python_venv_dir }}/bin/activate" &&
              python3 -m pip install --upgrade pip &&
              python3 -m pip install --upgrade setuptools build twine

        - name: Install pip requirements
          bash:
            cmd: >-
              python3 -m pip install -r requirements.txt

        - name: Perform python build
          bash:
            cmd: source "./{{ python_venv_dir }}/bin/activate" && python3 -m build
            env:
              # BUILD_VERSION is referenced in setup.py
              BUILD_VERSION: "{{ version.major }}.{{ version.minor }}.{{ version.patch }}"

  pypi_release:
    depends_on:
      - python_build
    bash:
      cmd: >-
        source "./{{ python_venv_dir }}/bin/activate" &&
        python3 -m twine upload "./{{ python_dist_dir }}"/*
      env:
        TWINE_USERNAME: "{{ twine_username }}"
        TWINE_PASSWORD: "{{ twine_password }}"

